// Generated by view binder compiler. Do not edit!
package in.exploreit.slc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import in.exploreit.slc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView evDesc;

  @NonNull
  public final ImageView evImageview;

  @NonNull
  public final TextView evName;

  @NonNull
  public final LinearLayout fdImageviewlayout;

  @NonNull
  public final TextView hoursTv;

  private EventsBinding(@NonNull CardView rootView, @NonNull TextView evDesc,
      @NonNull ImageView evImageview, @NonNull TextView evName,
      @NonNull LinearLayout fdImageviewlayout, @NonNull TextView hoursTv) {
    this.rootView = rootView;
    this.evDesc = evDesc;
    this.evImageview = evImageview;
    this.evName = evName;
    this.fdImageviewlayout = fdImageviewlayout;
    this.hoursTv = hoursTv;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EventsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.events, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ev_desc;
      TextView evDesc = ViewBindings.findChildViewById(rootView, id);
      if (evDesc == null) {
        break missingId;
      }

      id = R.id.ev_imageview;
      ImageView evImageview = ViewBindings.findChildViewById(rootView, id);
      if (evImageview == null) {
        break missingId;
      }

      id = R.id.ev_name;
      TextView evName = ViewBindings.findChildViewById(rootView, id);
      if (evName == null) {
        break missingId;
      }

      id = R.id.fd_imageviewlayout;
      LinearLayout fdImageviewlayout = ViewBindings.findChildViewById(rootView, id);
      if (fdImageviewlayout == null) {
        break missingId;
      }

      id = R.id.hours_tv;
      TextView hoursTv = ViewBindings.findChildViewById(rootView, id);
      if (hoursTv == null) {
        break missingId;
      }

      return new EventsBinding((CardView) rootView, evDesc, evImageview, evName, fdImageviewlayout,
          hoursTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
