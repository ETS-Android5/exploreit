// Generated by view binder compiler. Do not edit!
package in.exploreit.slc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import in.exploreit.slc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOtpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button containedBtn;

  @NonNull
  public final ImageView iconImgv;

  @NonNull
  public final TextView otpDescTv;

  @NonNull
  public final TextView otpTv;

  @NonNull
  public final TextInputLayout outlinedTextField;

  @NonNull
  public final TextInputEditText textInputEditText;

  @NonNull
  public final TextView textView;

  private FragmentOtpBinding(@NonNull ConstraintLayout rootView, @NonNull Button containedBtn,
      @NonNull ImageView iconImgv, @NonNull TextView otpDescTv, @NonNull TextView otpTv,
      @NonNull TextInputLayout outlinedTextField, @NonNull TextInputEditText textInputEditText,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.containedBtn = containedBtn;
    this.iconImgv = iconImgv;
    this.otpDescTv = otpDescTv;
    this.otpTv = otpTv;
    this.outlinedTextField = outlinedTextField;
    this.textInputEditText = textInputEditText;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOtpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOtpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_otp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOtpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contained_btn;
      Button containedBtn = ViewBindings.findChildViewById(rootView, id);
      if (containedBtn == null) {
        break missingId;
      }

      id = R.id.icon_imgv;
      ImageView iconImgv = ViewBindings.findChildViewById(rootView, id);
      if (iconImgv == null) {
        break missingId;
      }

      id = R.id.otp_desc_tv;
      TextView otpDescTv = ViewBindings.findChildViewById(rootView, id);
      if (otpDescTv == null) {
        break missingId;
      }

      id = R.id.otp_tv;
      TextView otpTv = ViewBindings.findChildViewById(rootView, id);
      if (otpTv == null) {
        break missingId;
      }

      id = R.id.outlinedTextField;
      TextInputLayout outlinedTextField = ViewBindings.findChildViewById(rootView, id);
      if (outlinedTextField == null) {
        break missingId;
      }

      id = R.id.textInputEditText;
      TextInputEditText textInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (textInputEditText == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentOtpBinding((ConstraintLayout) rootView, containedBtn, iconImgv, otpDescTv,
          otpTv, outlinedTextField, textInputEditText, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
